blueprint:
  name: Smart Motion-Controlled Lighting
  description: >-
    Automatic lighting with motion detection, configurable auto-off timer,  
    and safety backup checks. Includes periodic monitoring and failure notifications.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: Motion sensor to trigger the automation
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_entity:
      name: Light
      description: Light to control
      selector:
        entity:
          domain: light
    timer_entity:
      name: Timer
      description: Timer helper for auto-off functionality
      selector:
        entity:
          domain: timer
    auto_off_duration:
      name: Auto-off Duration
      description: Time to wait before turning off the light after motion stops
      default: "00:02:00"
      selector:
        duration:
    periodic_check_minutes:
      name: Periodic Check Interval
      description: Minutes between periodic safety checks
      default: 30
      selector:
        number:
          min: 5
          max: 120
          unit_of_measurement: minutes
    notification_service:
      name: Notification Service (Optional)
      description: Notification service for error alerts
      default: ""
      selector:
        text:
    notification_title:
      name: Notification Title
      description: Title for error notifications
      default: "Light Control Error!"
      selector:
        text:
    notification_message:
      name: Notification Message
      description: Message for error notifications
      default: "Light could not be turned off correctly on first attempt!"
      selector:
        text:

alias: "{{ blueprint.name }}"
description: "{{ blueprint.description }}"

triggers:
  - entity_id: !input motion_sensor
    id: motion_detected
    trigger: state
    to: "on"
  - entity_id: !input motion_sensor
    id: motion_clear
    trigger: state
    to: "off"
  - trigger: state
    entity_id: !input light_entity
    to: "on"
    id: light_on
  - entity_id: !input timer_entity
    id: timer_finished
    trigger: state
    to: idle
    from: active
  - minutes: "{{ periodic_check_minutes }}"
    id: periodic_check
    trigger: time_pattern

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: motion_detected
          - condition: state
            entity_id: !input light_entity
            state: "off"
        sequence:
          - target:
              entity_id: !input light_entity
            action: light.turn_on
            data: {}
          - action: timer.cancel
            target:
              entity_id: !input timer_entity

      - conditions:
          - condition: trigger
            id:
              - motion_clear
              - light_on
              - periodic_check
          - condition: state
            entity_id: !input light_entity
            state: "on"
          - condition: state
            entity_id: !input motion_sensor
            state: "off"
        sequence:
          - action: timer.start
            data:
              duration: !input auto_off_duration
            target:
              entity_id: !input timer_entity

      - conditions:
          - condition: trigger
            id: timer_finished
        sequence:
          - condition: state
            entity_id: !input motion_sensor
            state: "off"
          - condition: state
            entity_id: !input light_entity
            state: "on"
          - target:
              entity_id: !input light_entity
            action: light.turn_off
            data: {}
          - delay:
              seconds: 2
          - condition: state
            entity_id: !input light_entity
            state: "on"
          - if:
              - condition: template
                value_template: "{{ notification_service != '' }}"
            then:
              - service: "{{ notification_service }}"
                data:
                  title: !input notification_title
                  message: !input notification_message

mode: restart
max_exceeded: silent
